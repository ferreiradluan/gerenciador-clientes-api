name: Backend CI/CD Pipeline

on:
  push:
    branches: [ developer, main ]
    paths: 
      - 'backend/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ developer, main ]
    paths: 
      - 'backend/**'

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: gerenciador_clientes_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('backend/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run backend tests
      run: |
        cd backend
        ./mvnw clean test
      env:
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/gerenciador_clientes_db

  build-backend:
    runs-on: ubuntu-latest
    needs: test-backend
    if: github.ref == 'refs/heads/developer' || github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('backend/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build backend with Maven
      run: |
        cd backend
        ./mvnw clean package -DskipTests

  deploy-heroku:
    runs-on: ubuntu-latest
    needs: build-backend
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy Backend to Heroku
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        appdir: "backend"
        buildpack: "heroku/java"
