name: CI/CD Pipeline - Gerenciador de Clientes

on:
  push:
    branches: [ main, developer ]
  pull_request:
    branches: [ main ]

jobs:
  # Job que roda apenas na branch 'developer'
  build_and_test_developer:
    name: Build & Test (Developer)
    if: github.ref == 'refs/heads/developer'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build & Test Backend
        run: mvn -f backend/pom.xml clean install

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install, Build & Test Frontend
        run: |
          npm --prefix frontend ci
          npm --prefix frontend run build -- --configuration production
          npm --prefix frontend run test -- --watch=false --browsers=ChromeHeadless

  # Job que roda apenas na branch 'main'
  deploy_production:
    name: Deploy to Production (Main)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    # Os jobs de deploy rodam em paralelo
    steps: [] # Este job é um container lógico

  deploy_backend:
    name: Deploy Backend to Heroku
    needs: deploy_production # Garante que só rode no fluxo da main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "backend"

  deploy_frontend:
    name: Deploy Frontend to Vercel
    needs: deploy_production # Garante que só rode no fluxo da main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_SCOPE }}
          working-directory: frontend
