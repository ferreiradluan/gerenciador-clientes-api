name: Backend Development CI

on:
  push:
    branches: [ developer ]
    paths: 
      - 'backend/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ developer ]
    paths: 
      - 'backend/**'

jobs:
  test-backend-dev:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: gerenciador_clientes_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('backend/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run backend tests
      run: |
        cd backend
        ./mvnw clean test
      env:
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/gerenciador_clientes_db
    
    - name: Build backend application
      run: |
        cd backend
        ./mvnw clean package -DskipTests
    
    - name: Run integration tests (optional)
      run: |
        cd backend
        ./mvnw verify
      env:
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/gerenciador_clientes_db

  code-quality-backend:
    runs-on: ubuntu-latest
    needs: test-backend-dev
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('backend/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run backend code analysis
      run: |
        cd backend
        ./mvnw clean compile
        echo "âœ… Backend code quality check passed"
